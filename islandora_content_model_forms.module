<?php

// $Id$

/**
 * @file
 *
 */
define("PERM_ADMIN_FORM_ASSOCIATION", 'Admin Form Associations');

/**
 * Implementation of Hook Menu.
 * 
 * @return array
 */
function islandora_content_model_forms_menu() {
  // List existing associations, include a form for adding more.
  $items['admin/content/model/forms'] = array(
    'title' => 'Form Associations.',
    'description' => 'Lists Content Models and the forms they are association with.',
    'page callback' => 'islandora_content_model_forms_list',
    'access arguments' => array(PERM_ADMIN_FORM_ASSOCIATION), // Use something fedora specific.
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/content/model/forms/autocomplete'] = array(
    'title' => 'Auto Complete List of Models.',
    'description' => 'Lists Content Models.',
    'page callback' => 'islandora_content_model_forms_autocomplete',
    'access arguments' => array(PERM_ADMIN_FORM_ASSOCIATION), // Use something fedora specific.
    'type' => MENU_CALLBACK,
  );
  // Remove existing associations, redirect back to list.
  $items['admin/content/model/forms/remove/%'] = array(
    'title' => 'Remove Form Association.',
    'description' => 'Removes a associated form.',
    'page callback' => 'islandora_content_model_forms_remove',
    'page arguments' => array(5),
    'access arguments' => array(PERM_ADMIN_FORM_ASSOCIATION), // Use something fedora specific.
    'type' => MENU_CALLBACK,
  );
  // Get the list of forms for the given form
  $items['admin/content/model/%/forms'] = array(
    'page callback' => 'islandora_content_model_get_form_names_ahah',
    'access arguments' => array(PERM_ADMIN_FORM_ASSOCIATION), // Use something fedora specific.
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_perm. Register permissions.
 * 
 * @return array
 */
function islandora_content_model_forms_perm() {
  return array(
    PERM_ADMIN_FORM_ASSOCIATION,
  );
}

/**
 * Implements Hook Theme. Registers themes.
 *
 * @return array
 */
function islandora_content_model_forms_theme() {
  return array(
    'list' => array(
      'arguments' => array('list' => NULL, 'form' => NULL),
      'template' => 'List',
    ),
  );
}

/**
 * Lists the existing forms.
 */
function islandora_content_model_forms_list() {
  $path = drupal_get_path('module', 'islandora_content_model_forms');
  drupal_add_css("$path/css/form.css");
  $list = array();
  $result = db_query('SELECT * FROM {islandora_content_model_forms}');
  while ($data = db_fetch_object($result)) {
    $list[] = array($data->id, $data->content_model, $data->form_name, $data->dsid, $data->title_field, $data->template != '');
  }
  return theme('list', $list, drupal_get_form('islandora_content_model_forms_list_form'));
}

/**
 * Remove the association identified by $id.
 * 
 * @param int $id 
 */
function islandora_content_model_forms_remove($id) {
  db_query("DELETE FROM {islandora_content_model_forms} WHERE id = '%d'", (int) $id);
  drupal_set_message('Successfully removed association.');
  drupal_goto('admin/content/model/forms');
}

/**
 * Render the form for adding new associations.
 * 
 * @param array $form_state 
 * @return array
 */
function islandora_content_model_forms_list_form(array &$form_state) {
  $content_models = islandora_content_model_forms_get_content_model_names();
  $form_names = islandora_content_model_forms_get_form_names();
  if (count($form_names) == 0 || count($content_models) == 0) {
    drupal_set_message('Both forms and content models must be defined to add new associations.', 'error');
    return;
  }
  $form = array(
    '#attributes' => array('enctype' => 'multipart/form-data'),
    'fieldset' => array(
      '#type' => 'fieldset',
      '#title' => 'Add Association',
      'content_model' => array(
        '#type' => 'textfield',
        '#title' => 'Content Model',
        '#autocomplete_path' => 'admin/content/model/forms/autocomplete',
        '#description' => 'The content model to associate with a form.<br/> If the content model has no decendants it will not show up in autocomplete.',
        '#options' => $content_models,
        '#default_value' => isset($form_state['values']['content_model']) ? $form_state['values']['content_model'] : NULL,
      ),
      'dsid' => array(
        '#type' => 'textfield',
        '#description' => 'The datastream ID of where the objects metadata is stored.<br/>&nbsp',
        '#title' => 'Metadata Datastream ID',
        '#required' => TRUE,
        '#default_value' => isset($form_state['values']['dsid']) ? $form_state['values']['dsid'] : NULL,
      ),
      'title_field' => array(
        '#type' => 'textfield',
        '#description' => 'The form field that you want to use for the objects label.',
        '#title' => 'Title Field',
        '#required' => TRUE
      ),
      'form_name' => array(
        '#type' => 'select',
        '#title' => 'Form Name',
        '#description' => 'The name of the form to associate with the content model.',
        '#options' => $form_names,
        '#default_value' => isset($form_state['values']['form_name']) ? $form_state['values']['form_name'] : NULL,
      ),
      'file' => array(
        '#type' => 'file',
        '#title' => t('Upload Template Document'),
        '#description' => t('A sample metadata file used to prepopulate the form on ingest.')
      ),
      'submit' => array(
        '#type' => 'submit',
        '#value' => 'Add Association'
      )
    ),
  );
  return $form;
}

/**
 * Add a new association.
 * 
 * @param array $form_state 
 */
function islandora_content_model_forms_list_form_submit($form, array &$form_state) {
  $object = new stdClass();
  $object->content_model = $form_state['values']['content_model'];
  $object->form_name = $form_state['values']['form_name'];
  $object->dsid = $form_state['values']['dsid'];
  $object->title_field = $form_state['values']['title_field'];
  $object->template = '';
  $file_uploaded = $_FILES['files']['error']['file'] == 0;
  if ($file_uploaded) {
    $definition = new DOMDocument();
    $definition->load($_FILES['files']['tmp_name']['file']);
    $object->template = $definition->saveXML();
  }
  if (drupal_write_record('islandora_content_model_forms', $object) !== FALSE) {
    drupal_set_message('Successfully added association.');
  }
  else {
    drupal_set_message('Failed to add association.', 'error');
  }
}

/**
 * Gets a map of form names suitable for use as select #options.
 */
function islandora_content_model_forms_get_content_model_names() {
  $content_models = array();
  $content = islandora_content_model_forms_query_content_models();
  return islandora_content_model_forms_parse_query($content);
}

/**
 * @return string
 */
function islandora_content_model_forms_query_content_models() {
  module_load_include('inc', 'fedora_repository', 'api/fedora_utils');
  $offset = 0;
  $limit = 1000;
  $query = 'select $object  $model from <#ri>
  where (walk($model <fedora-model:hasModel><info:fedora/fedora-system:ContentModel-3.0>
  and $model <fedora-model:hasModel> $object))
  minus $object <mulgara:is><info:fedora/fedora-system:FedoraObject-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ContentModel-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ServiceDefinition-3.0>
  minus $object <mulgara:is><info:fedora/fedora-system:ServiceDeployment-3.0>
  order by $object';
  $url = variable_get('fedora_repository_url', 'http://localhost:8080/fedora/risearch');
  $url .= "?type=tuples&flush=TRUE&format=Sparql&limit=$limit&offset=$offset&lang=itql&stream=on&query=" . htmlentities(urlencode($query));
  $content = trim(do_curl($url));
  return $content != '' ? $content : NULL;
}

/**
 *
 * @param string $content
 * @return array
 */
function islandora_content_model_forms_parse_query($content) {
  $content_models = array();
  if ($content) {
    $doc = new DOMDocument();
    $doc->loadXML($content);
    $path = new DOMXPath($doc);
    $path->registerNamespace('sparql', 'http://www.w3.org/2001/sw/DataAccess/rf1/result');
    $results = $path->query('//sparql:result');
    if ($results->length > 0) {
      $count = $results->length;
      for ($i = 0; $i < $count; $i++) {
        $result = $results->item($i);
        $pid = substr($path->query('sparql:object/@uri', $result)->item(0)->value, 12); // 12 characteres in "info:fedora/"
        $content_models[$pid] = $pid;
      }
    }
  }
  return $content_models;
}

/**
 * Gets a map of form names suitable for use as select #options.
 * 
 * @return array
 */
function islandora_content_model_forms_get_form_names() {
  $form_names = array();
  $result = db_query('SELECT name FROM {xml_forms}');
  while ($data = db_fetch_object($result)) {
    $form_names[$data->name] = $data->name;
  }
  return $form_names;
}

/**
 * Php you suck so badly, the array_filter function should just take extra parameters like array_walk...
 */
class AutoCompleteFilter {

  protected $string;

  function __construct($string) {
    $this->string = strtolower($string);
  }

  function __invoke($content_model) {
    return (preg_match("/^{$this->string}/i", $content_model) !== 0) ? TRUE : FALSE;
  }

}

/**
 * Autocomplete the content model name..
 * 
 * @param string $string
 * @return string
 */
function islandora_content_model_forms_autocomplete($string) {
  $content_models = islandora_content_model_forms_get_content_model_names();
  $output = array_filter($content_models, new AutoCompleteFilter($string));
  return drupal_json($output);
}

/**
 *
 * @param string $content_model
 * @return array 
 */
function islandora_content_model_get_form_names($content_model) {
  $list = array();
  $result = db_query('SELECT * FROM {islandora_content_model_forms}');
  while ($data = db_fetch_object($result)) {
    if ($data->content_model == $content_model) {
      $list[$data->form_name] = "{$data->form_name}: ({$data->dsid})";
    }
  }
  return $list;
}

/**
 *
 * @param string $content_model
 * @return string 
 */
function islandora_content_model_get_form_names_ahah($content_model) {
  $list = islandora_content_model_get_form_names($content_model);
  return drupal_json($list);
}

/**
 *
 * @param string $content_model_pid
 * @param string $form_name
 * @return string 
 */
function islandora_content_model_get_dsid($content_model_pid, $form_name) {
  $result = db_query("SELECT dsid FROM {islandora_content_model_forms} where content_model = '%s' AND form_name = '%s'", $content_model_pid, $form_name);
  while ($data = db_fetch_object($result)) {
    if (isset($data->dsid)) {
      return $data->dsid;
    }
  }
  return NULL;
}

/**
 *
 * @param string $content_model_pid
 * @param string $form_name
 * @return string 
 */
function islandora_content_model_get_title_field($content_model_pid, $form_name) {
  $result = db_query("SELECT title_field FROM {islandora_content_model_forms} where content_model = '%s' AND form_name = '%s'", $content_model_pid, $form_name);
  while ($data = db_fetch_object($result)) {
    if (isset($data->title_field)) {
      return $data->title_field;
    }
  }
  return NULL;
}

/**
 *
 * @param type $content_model_pid
 * @param type $form_name
 * @return type 
 */
function islandora_content_model_get_template($content_model_pid, $form_name) {
  $result = db_query("SELECT template FROM {islandora_content_model_forms} where content_model = '%s' AND form_name = '%s'", $content_model_pid, $form_name);
  while ($data = db_fetch_object($result)) {
    if (isset($data->template) && $data->template != '') {
      return $data->template;
    }
  }
  return NULL;
}